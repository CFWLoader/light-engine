{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/scripts/gllib/cuon-utils.ts","assets/scripts/gllib/webgl-utils.ts","assets/scripts/program/MultiPoint.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","webgl_utils_1","loadShader","gl","type","source","shader","createShader","console","log","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","initShaders","vshader","fshader","program","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","useProgram","getWebGLContext","canvas","opt_debug","WebGLUtils","setupWebGL","makeFailHTML","msg","opt_attribs","opt_onError","str","container","document","getElementsByTagName","window","WebGLRenderingContext","OTHER_PROBLEM","GET_A_WEBGL_BROWSER","innerHTML","addEventListener","event","statusMessage","context","create3DContext","names","ii","getContext","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","cancelAnimationFrame","cancelRequestAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","mozCancelAnimationFrame","mozCancelRequestAnimationFrame","msCancelAnimationFrame","msCancelRequestAnimationFrame","oCancelAnimationFrame","oCancelRequestAnimationFrame","clearTimeout","cuon_utils_1","vShader","fShader","numVetices","getElementById","vertices","Float32Array","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","aPosition","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","initVertexBuffers","clearColor","clear","COLOR_BUFFER_BIT","drawArrays","POINTS"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { WebGLUtils } from \"./webgl-utils\";\r\n\r\n// cuon-utils.js (c) 2012 kanda and matsuda\r\n/**\r\n * Create a program object and make current\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return true, if the program object was created and successfully made current \r\n */\r\nexport function initShaders(gl, vshader, fshader) {\r\n  var program = createProgram(gl, vshader, fshader);\r\n  if (!program) {\r\n    console.log('Failed to create program');\r\n    return false;\r\n  }\r\n\r\n  gl.useProgram(program);\r\n  gl.program = program;\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Create the linked program object\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return created program object, or null if the creation has failed\r\n */\r\nfunction createProgram(gl, vshader, fshader) {\r\n  // Create shader object\r\n  var vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader);\r\n  var fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader);\r\n  if (!vertexShader || !fragmentShader) {\r\n    return null;\r\n  }\r\n\r\n  // Create a program object\r\n  var program = gl.createProgram();\r\n  if (!program) {\r\n    return null;\r\n  }\r\n\r\n  // Attach the shader objects\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n\r\n  // Link the program object\r\n  gl.linkProgram(program);\r\n\r\n  // Check the result of linking\r\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n  if (!linked) {\r\n    var error = gl.getProgramInfoLog(program);\r\n    console.log('Failed to link program: ' + error);\r\n    gl.deleteProgram(program);\r\n    gl.deleteShader(fragmentShader);\r\n    gl.deleteShader(vertexShader);\r\n    return null;\r\n  }\r\n  return program;\r\n}\r\n\r\n/**\r\n * Create a shader object\r\n * @param gl GL context\r\n * @param type the type of the shader object to be created\r\n * @param source shader program (string)\r\n * @return created shader object, or null if the creation has failed.\r\n */\r\nfunction loadShader(gl, type, source) {\r\n  // Create shader object\r\n  var shader = gl.createShader(type);\r\n  if (shader == null) {\r\n    console.log('unable to create shader');\r\n    return null;\r\n  }\r\n\r\n  // Set the shader program\r\n  gl.shaderSource(shader, source);\r\n\r\n  // Compile the shader\r\n  gl.compileShader(shader);\r\n\r\n  // Check the result of compilation\r\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n  if (!compiled) {\r\n    var error = gl.getShaderInfoLog(shader);\r\n    console.log('Failed to compile shader: ' + error);\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\n/** \r\n * Initialize and get the rendering for WebGL\r\n * @param canvas <cavnas> element\r\n * @param opt_debug flag to initialize the context for debugging\r\n * @return the rendering context for WebGL\r\n */\r\nexport function getWebGLContext(canvas, opt_debug = null): any {\r\n  // Get the rendering context for WebGL\r\n  var gl = WebGLUtils.setupWebGL(canvas);\r\n  if (!gl) return null;\r\n\r\n  // if opt_debug is explicitly false, create the context for debugging\r\n  // if (arguments.length < 2 || opt_debug) {\r\n  //   gl = WebGLDebugUtils.makeDebugContext(gl);\r\n  // }\r\n\r\n  return gl;\r\n}\r\n","/*\r\n * Copyright 2010, Google Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Google Inc. nor the names of its\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n\r\n/**\r\n * @fileoverview This file contains functions every webgl program will need\r\n * a version of one way or another.\r\n *\r\n * Instead of setting up a context manually it is recommended to\r\n * use. This will check for success or failure. On failure it\r\n * will attempt to present an approriate message to the user.\r\n *\r\n *       gl = WebGLUtils.setupWebGL(canvas);\r\n *\r\n * For animated WebGL apps use of setTimeout or setInterval are\r\n * discouraged. It is recommended you structure your rendering\r\n * loop like this.\r\n *\r\n *       function render() {\r\n *         window.requestAnimationFrame(render, canvas);\r\n *\r\n *         // do rendering\r\n *         ...\r\n *       }\r\n *       render();\r\n *\r\n * This will call your rendering function up to the refresh rate\r\n * of your display but will stop rendering if your app is not\r\n * visible.\r\n */\r\n\r\nexport class WebGLUtils {\r\n\r\n/**\r\n * Creates the HTLM for a failure message\r\n * @param {string} canvasContainerId id of container of th\r\n *        canvas.\r\n * @return {string} The html.\r\n */\r\npublic static makeFailHTML(msg) {\r\n  return '' +\r\n        '<div style=\"margin: auto; width:500px;z-index:10000;margin-top:20em;text-align:center;\">' + msg + '</div>';\r\n  return '' +\r\n    '<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>' +\r\n    '<td align=\"center\">' +\r\n    '<div style=\"display: table-cell; vertical-align: middle;\">' +\r\n    '<div style=\"\">' + msg + '</div>' +\r\n    '</div>' +\r\n    '</td></tr></table>';\r\n};\r\n\r\n/**\r\n * Mesasge for getting a webgl browser\r\n * @type {string}\r\n */\r\npublic static readonly GET_A_WEBGL_BROWSER = '' +\r\n  'This page requires a browser that supports WebGL.<br/>' +\r\n  '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>';\r\n\r\n/**\r\n * Mesasge for need better hardware\r\n * @type {string}\r\n */\r\npublic static readonly OTHER_PROBLEM = '' +\r\n  \"It doesn't appear your computer can support WebGL.<br/>\" +\r\n  '<a href=\"http://get.webgl.org\">Click here for more information.</a>';\r\n\r\n/**\r\n * Creates a webgl context. If creation fails it will\r\n * change the contents of the container of the <canvas>\r\n * tag to an error message with the correct links for WebGL.\r\n * @param {Element} canvas. The canvas element to create a\r\n *     context from.\r\n * @param {WebGLContextCreationAttirbutes} opt_attribs Any\r\n *     creation attributes you want to pass in.\r\n * @param {function:(msg)} opt_onError An function to call\r\n *     if there is an error during creation.\r\n * @return {WebGLRenderingContext} The created context.\r\n */\r\npublic static setupWebGL(canvas, opt_attribs = null, opt_onError = null) {\r\n  function handleCreationError(msg) {\r\n      var container = document.getElementsByTagName(\"body\")[0];\r\n    //var container = canvas.parentNode;\r\n    if (container) {\r\n      var str = window.WebGLRenderingContext ?\r\n           WebGLUtils.OTHER_PROBLEM :\r\n           WebGLUtils.GET_A_WEBGL_BROWSER;\r\n      if (msg) {\r\n        str += \"<br/><br/>Status: \" + msg;\r\n      }\r\n      container.innerHTML = WebGLUtils.makeFailHTML(str);\r\n    }\r\n  };\r\n\r\n  opt_onError = opt_onError || handleCreationError;\r\n\r\n  if (canvas.addEventListener) {\r\n    canvas.addEventListener(\"webglcontextcreationerror\", function(event) {\r\n          opt_onError(event.statusMessage);\r\n        }, false);\r\n  }\r\n  var context = WebGLUtils.create3DContext(canvas, opt_attribs);\r\n  if (!context) {\r\n    if (!window.WebGLRenderingContext) {\r\n      opt_onError(\"\");\r\n    } else {\r\n      opt_onError(\"\");\r\n    }\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\n/**\r\n * Creates a webgl context.\r\n * @param {!Canvas} canvas The canvas tag to get context\r\n *     from. If one is not passed in one will be created.\r\n * @return {!WebGLContext} The created context.\r\n */\r\npublic static create3DContext(canvas, opt_attribs) {\r\n  var names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\r\n  var context = null;\r\n  for (var ii = 0; ii < names.length; ++ii) {\r\n    try {\r\n      context = canvas.getContext(names[ii], opt_attribs);\r\n    } catch(e) {}\r\n    if (context) {\r\n      break;\r\n    }\r\n  }\r\n  return context;\r\n}\r\n\r\n};\r\n\r\n/**\r\n * Provides requestAnimationFrame in a cross browser\r\n * way.\r\n */\r\nif (!window.requestAnimationFrame) {\r\n  window.requestAnimationFrame = (function() {\r\n    return window.requestAnimationFrame ||\r\n           window.webkitRequestAnimationFrame ||\r\n           (window as any).mozRequestAnimationFrame ||\r\n           (window as any).oRequestAnimationFrame ||\r\n           (window as any).msRequestAnimationFrame ||\r\n           function(/* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\r\n             window.setTimeout(callback, 1000/60);\r\n           };\r\n  })();\r\n}\r\n\r\n/** * ERRATA: 'cancelRequestAnimationFrame' renamed to 'cancelAnimationFrame' to reflect an update to the W3C Animation-Timing Spec. \r\n * \r\n * Cancels an animation frame request. \r\n * Checks for cross-browser support, falls back to clearTimeout. \r\n * @param {number}  Animation frame request. */\r\nif (!window.cancelAnimationFrame) {\r\n  window.cancelAnimationFrame = ((window as any).cancelRequestAnimationFrame ||\r\n                                 window.webkitCancelAnimationFrame || (window as any).webkitCancelRequestAnimationFrame ||\r\n                                 (window as any).mozCancelAnimationFrame || (window as any).mozCancelRequestAnimationFrame ||\r\n                                 (window as any).msCancelAnimationFrame || (window as any).msCancelRequestAnimationFrame ||\r\n                                 (window as any).oCancelAnimationFrame || (window as any).oCancelRequestAnimationFrame ||\r\n                                 window.clearTimeout);\r\n}","import { getWebGLContext, initShaders } from \"../gllib/cuon-utils\";\r\n\r\nfunction multiPoint(vShader: string, fShader: string) {\r\n    let canvas = document.getElementById(\"webgl\");\r\n    let gl = getWebGLContext(canvas);\r\n    if (!gl) {\r\n        console.log(\"Failed to get the rendering context of WebGL!\");\r\n        return;\r\n    }\r\n    // Initialize shaders.\r\n    if (!initShaders(gl, vShader, fShader)) {\r\n        console.log(\"Failed to initilize shaders.\");\r\n        return;\r\n    }\r\n    let numVetices = initVertexBuffers(gl);\r\n    if (numVetices < 0) {\r\n        console.log(\"Failed to set the positions of the vetices.\");\r\n        return;\r\n    }\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.drawArrays(gl.POINTS, 0, numVetices);\r\n}\r\n\r\nfunction initVertexBuffers(gl) {\r\n    let vertices = new Float32Array([\r\n        0.0, 0.5, -0.5, -0.5, 0.5, -0.5\r\n    ]);\r\n    let numVetices = vertices.length / 2;\r\n    // Create buffer object.\r\n    let vertexBuffer = gl.createBuffer();\r\n    if (!vertexBuffer) {\r\n        console.log(\"Failed to create the buffer obejct.\");\r\n        return -1;\r\n    }\r\n    // Binding buffer object to target.\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n    // Write data to buffer object.\r\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n    let aPosition = gl.getAttribLocation(gl.program, \"a_Position\");\r\n    if (aPosition < 0) {\r\n        console.log(\"Failed to get the storage location of a_Position\");\r\n        return;\r\n    }\r\n    // Assign buffer object to aPosition variable.\r\n    gl.vertexAttribPointer(aPosition, 2, gl.FLOAT, false, 0, 0);\r\n    // Connect variable aPosition to its assigned buffer object.\r\n    gl.enableVertexAttribArray(aPosition);\r\n    return numVetices;\r\n}\r\n\r\nconst VSHADER_SOURCE =\r\n  'attribute vec4 a_Position;\\n' +\r\n  'void main() {\\n' +\r\n  '  gl_Position = a_Position;\\n' +\r\n  '  gl_PointSize = 10.0;\\n' +\r\n  '}\\n';\r\n\r\n// Fragment shader program\r\nconst FSHADER_SOURCE =\r\n  'void main() {\\n' +\r\n  '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\r\n  '}\\n';\r\n\r\nmultiPoint(VSHADER_SOURCE, FSHADER_SOURCE);"]}